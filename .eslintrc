{
  "env": {
    "browser": true,
    "node": true,
    "es2024": true
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    },
    "import/resolver": {
      "typescript": true,
      "node": true
    },
    "react": {
      "version": "detect"
    }
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": ["./tsconfig.json", "./tsconfig.node.json"],
    "tsconfigRootDir": "./"
  },
  "plugins": [
    "@typescript-eslint", // Ready for flat config
    "import", // Not ready for flat config yet: https://github.com/import-js/eslint-plugin-import/issues/2948
    "jsx-a11y", // Not ready for flat config yet: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/issues/978
    "react", // Not ready for flat config yet: https://github.com/jsx-eslint/eslint-plugin-react/issues/3699
    "prettier", // Ready for flat config
    "promise", // NOT ready for flat config yet: https://github.com/eslint-community/eslint-plugin-promise/issues/449
    "react-hooks", // NOT ready for flat config yet: https://github.com/facebook/react/issues/28313
    "react-hook-form", // NOT ready for flat config (and won't be for a while)
    "react-refresh", // Ready for flat config
    "react-perf", // NOT ready for flat config (and won't be for a while)
    "regexp", // Ready for flat config
    "simple-import-sort", // Ready for flat config
    "tailwindcss", // NOT ready for flat config yet: https://github.com/francoismassart/eslint-plugin-tailwindcss/issues/335
    "unicorn" // Ready for flat config
  ],
  "extends": [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "plugin:@typescript-eslint/recommended-type-checked",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:jsx-a11y/recommended",
    "plugin:n/recommended",
    "plugin:promise/recommended", 
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:react-hooks/recommended",
    "plugin:react-hook-form/recommended",
    "plugin:react-perf/recommended",
    "plugin:regexp/recommended",
    "plugin:security/recommended-legacy",
    "plugin:tailwindcss/recommended",
    "plugin:unicorn/recommended",
    "prettier"
  ],
  "rules": {
    "@typescript-eslint/no-unsafe-assignment": "warn",
    "@typescript-eslint/no-unsafe-member-access": "warn",
    "@typescript-eslint/no-unsafe-return": "warn",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-misused-promises": [
      2,
      {
        "checksVoidReturn": {
          "attributes": false
        }
      }
    ],
    "n/no-missing-import": "off",
    "no-unused-vars": "off",
    "no-unused-expressions": [
      "error",
      {
        "allowTernary": true
      }
    ],
    
    "jsx-a11y/anchor-is-valid": "warn",
    "jsx-a11y/media-has-caption": "warn",
    "prettier/prettier": "warn",
    "promise/always-return": "off",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react-perf/jsx-no-new-function-as-prop": "off",
    "react-refresh/only-export-components": [
      "warn",
      { "allowConstantExport": true }
    ],
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "unicorn/expiring-todo-comments": "off",
    "unicorn/filename-case": "off",
    "unicorn/no-useless-undefined": "warn",
    "unicorn/prevent-abbreviations": "warn"
  }
}